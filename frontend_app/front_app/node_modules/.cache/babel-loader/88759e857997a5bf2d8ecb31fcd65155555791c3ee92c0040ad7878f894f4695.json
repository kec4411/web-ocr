{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/front_app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useMemo } from \"react\";\nimport { ChakraProvider, Button, Box, Text, Link, VStack, Code, Grid, GridItem, Editable, EditableInput, EditableTextarea, EditablePreview, theme, Center, Container } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport { Logo } from './Logo';\nimport axios from \"axios\";\nimport { useDropzone } from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  // display: \"flex\",\n  // flexDirection: \"column\",\n  // width: 200,\n  // height: 150,\n  // margin: 10\n  border: '3px',\n  borderStyle: 'dotted',\n  borderColor: 'gray'\n};\nconst borderNormalStyle = {\n  border: '3px',\n  borderStyle: 'dotted',\n  borderColor: 'gray'\n};\nconst borderDragStyle = {\n  border: \"1px solid #00f\",\n  transition: \"border .5s ease-in-out\"\n};\nfunction App() {\n  _s();\n  const [fileUrl, setFileUrl] = useState();\n  const [ocrText, setOcrText] = useState();\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    console.log(\"acceptedFiles:\", acceptedFiles);\n    if (acceptedFiles.length > 0) {\n      const src = URL.createObjectURL(acceptedFiles[0]);\n      setFileUrl(src);\n      // setUploadFile(acceptedFiles[0]);\n    }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    open,\n    acceptedFiles\n  } = useDropzone({\n    onDrop,\n    noClick: true\n  });\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? borderDragStyle : borderNormalStyle)\n  }), [isDragActive]);\n  const postAvator = async () => {\n    const url = \"http://localhost:9004/convert/\";\n    const data = new FormData();\n    data.append('file', acceptedFiles[0]);\n    const headers = {\n      \"content-type\": \"multipart/form-data\"\n    };\n    axios.post(url, data, {\n      headers\n    }).then(res => {\n      console.log(res.data.ocrresult);\n      setOcrText(res.data.ocrresult);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      h: \"600px\",\n      templateRows: \"repeat(2, 1fr)\",\n      templateColumns: \"repeat(7, 1fr)\",\n      gap: 4,\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        rowSpan: 1,\n        colSpan: 7,\n        bg: \"tomato\",\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          h: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            ...getRootProps({\n              style\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drop the files here ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag 'n' drop some files here, or click to select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              colorScheme: \"green\",\n              onClick: open,\n              className: \"btn btn-primary align-self-center\",\n              children: \"Select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        rowSpan: 1,\n        colSpan: 3,\n        bg: \"papayawhip\",\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          h: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mt-2\",\n            style: {\n              margin: 'auto',\n              width: '200px',\n              height: '200px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: fileUrl,\n              alt: \"\",\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        rowSpan: 1,\n        colSpan: 1,\n        bg: \"papayawhip\",\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          h: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            colorScheme: \"green\",\n            onClick: postAvator,\n            className: \"btn btn-primary align-self-center\",\n            children: \"\\u8AAD\\u307F\\u53D6\\u308A\\u958B\\u59CB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        rowSpan: 1,\n        colSpan: 3,\n        bg: \"papayawhip\",\n        children: /*#__PURE__*/_jsxDEV(Editable, {\n          value: ocrText,\n          children: [/*#__PURE__*/_jsxDEV(EditablePreview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditableTextarea, {\n            h: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h02wVEkruBr5PzVRkj0wU5WclF8=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useCallback","useMemo","ChakraProvider","Button","Box","Text","Link","VStack","Code","Grid","GridItem","Editable","EditableInput","EditableTextarea","EditablePreview","theme","Center","Container","ColorModeSwitcher","Logo","axios","useDropzone","baseStyle","border","borderStyle","borderColor","borderNormalStyle","borderDragStyle","transition","App","fileUrl","setFileUrl","ocrText","setOcrText","onDrop","acceptedFiles","console","log","length","src","URL","createObjectURL","getRootProps","getInputProps","isDragActive","open","noClick","style","postAvator","url","data","FormData","append","headers","post","then","res","ocrresult","catch","err","margin","width","height"],"sources":["/usr/src/app/front_app/src/App.js"],"sourcesContent":["import { useState, useCallback, useMemo } from \"react\";\nimport {\n  ChakraProvider,\n  Button,\n  Box,\n  Text,\n  Link,\n  VStack,\n  Code,\n  Grid,\n  GridItem,\n  Editable,\n  EditableInput,\n  EditableTextarea,\n  EditablePreview,\n  theme,\n  Center,\n  Container\n} from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport { Logo } from './Logo';\n\nimport axios from \"axios\";\nimport { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  // display: \"flex\",\n  // flexDirection: \"column\",\n  // width: 200,\n  // height: 150,\n  // margin: 10\n  border: '3px',\n  borderStyle: 'dotted',\n  borderColor: 'gray'\n};\n\nconst borderNormalStyle = {\n  border: '3px',\n  borderStyle: 'dotted',\n  borderColor: 'gray'\n};\nconst borderDragStyle = {\n  border: \"1px solid #00f\",\n  transition: \"border .5s ease-in-out\"\n};\n\nfunction App() {\n  const [fileUrl, setFileUrl] = useState();\n  const [ocrText, setOcrText] = useState();\n\n  const onDrop = useCallback((acceptedFiles) => {\n    // Do something with the files\n    console.log(\"acceptedFiles:\", acceptedFiles);\n    if (acceptedFiles.length > 0) {\n      const src = URL.createObjectURL(acceptedFiles[0]);\n      setFileUrl(src);\n      // setUploadFile(acceptedFiles[0]);\n    }\n  }, []);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    open,\n    acceptedFiles\n  } = useDropzone({\n    onDrop,\n    noClick: true\n  });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? borderDragStyle : borderNormalStyle)\n    }),\n    [isDragActive]\n  );\n\n  const postAvator = async () => {\n    const url = \"http://localhost:9004/convert/\";\n    const data = new FormData();\n    data.append('file', acceptedFiles[0]);\n    const headers = { \"content-type\": \"multipart/form-data\" };\n    axios\n      .post( url, data, { headers })\n      .then((res) => {\n        console.log(res.data.ocrresult);\n        setOcrText(res.data.ocrresult);\n      })\n      .catch(err =>{\n        console.log(err);\n      } );\n    }\n\n\n\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Grid\n        h='600px'\n        templateRows='repeat(2, 1fr)'\n        templateColumns='repeat(7, 1fr)'\n        gap={4}\n      >\n        <GridItem rowSpan={1} colSpan={7} bg=\"tomato\">\n          <Center h='100%'>\n            <Container {...getRootProps({ style })}>\n              <input {...getInputProps()} />\n              {isDragActive ? (\n                <p>Drop the files here ...</p>\n              ) : (\n                <p>Drag 'n' drop some files here, or click to select files</p>\n              )}\n              <Button\n                type=\"button\"\n                colorScheme=\"green\"\n                onClick={open}\n                className=\"btn btn-primary align-self-center\"\n              >\n                Select files\n              </Button>\n            </Container>\n          </Center>\n        </GridItem>\n\n        <GridItem rowSpan={1} colSpan={3} bg='papayawhip'>\n          <Center h='100%'>\n            <div className=\"card mt-2\" style={{ margin: 'auto', width: '200px', height: '200px' }} >\n              <img src={fileUrl} alt=\"\" width=\"100%\" />\n            </div>\n          </Center>\n        </GridItem>\n\n        <GridItem rowSpan={1} colSpan={1} bg='papayawhip'>\n          <Center h='100%'>\n            <Button\n              type=\"button\"\n              colorScheme=\"green\"\n              onClick={postAvator}\n              className=\"btn btn-primary align-self-center\"\n              >\n              読み取り開始\n            </Button>\n          </Center>\n        </GridItem>\n        \n        <GridItem rowSpan={1} colSpan={3} bg='papayawhip'>\n          <Editable value={ocrText}>\n            <EditablePreview />\n            <EditableTextarea h='100%' />\n          </Editable>\n        </GridItem>\n      </Grid>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}